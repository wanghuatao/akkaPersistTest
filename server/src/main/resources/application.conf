include "common.conf"

akka {
  log-dead-letters = on
  log-dead-letters-during-shutdown = off
  jvm-exit-on-fatal-error = true

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "WARNING"
  //logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    transport = "akka.remote.netty.NettyRemoteTransport"
    log-remote-lifecycle-events = off
    log-remote-lifecycle-events = error

    netty.tcp {
      hostname = ${?PUBLISH_HOST}   # external (logical) hostname
      port = 2551
      port = ${?PUBLISH_PORT}       # external (logical) port

      bind-hostname = "0.0.0.0"
      bind-hostname = ${?BIND_HOST}  # internal (bind) hostname
      bind-port = ${?BIND_PORT}      # internal (bind) port

    }
  }

  cluster {

    seed-nodes = [${?SEED_NODE_1}]

    roles = []

    seed-node-timeout = 20s

    retry-unsuccessful-join-after = off

    shutdown-after-unsuccessful-join-seed-nodes = 20s
    coordinated-shutdown.terminate-actor-system = on


    failure-detector {
      implementation-class = "akka.remote.PhiAccrualFailureDetector"
      # How often keep-alive heartbeat messages should be sent to each connection.
      heartbeat-interval = 3 s

      # Defines the failure detector threshold.
      # A low threshold is prone to generate many wrong suspicions but ensures
      # a quick detection in the event of a real crash. Conversely, a high
      # threshold generates fewer mistakes but needs more time to detect
      # actual crashes.
      threshold = 8.0

    }

  }


  extensions = ["akka.cluster.client.ClusterClientReceptionist", "akka.persistence.Persistence"]

  #min-nr-of-members guarantees that cluster wonâ€™t be created until at least N nodes are joined.
  #Minimum number of nodes to start broadcasting Up message, should be 3 minimum unless it's local
  //  min-nr-of-members = 3
  use-dispatcher = cluster-dispatcher
  //  metrics {
  //    # Disable legacy metrics in akka-cluster.
  //    enabled = on
  //    # Sigar native library extract location during tests.
  //    # Note: use per-jvm-instance folder when running multiple jvm on one host.
  //    #native-library-extract-folder = ${user.dir}/target/native
  //  }
}



# Settings for the ClusterClientReceptionist extension
akka.cluster.client.receptionist {
  # Actor name of the ClusterReceptionist actor, /system/receptionist
  name = receptionist

  # Start the receptionist on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # The receptionist will send this number of contact points to the client
  number-of-contacts = 10

  # The actor that tunnel response messages to the client will be stopped
  # after this time of inactivity.
  response-tunnel-receive-timeout = 30s

  # The id of the dispatcher to use for ClusterReceptionist actors.
  # If not specified default dispatcher is used.
  # If specified you need to define the settings of the actual dispatcher.
  use-dispatcher = ""

  # How often failure detection heartbeat messages should be received for
  # each ClusterClient
  heartbeat-interval = 2s

  # Number of potentially lost/delayed heartbeats that will be
  # accepted before considering it to be an anomaly.
  # The ClusterReceptionist is using the akka.remote.DeadlineFailureDetector, which
  # will trigger if there are no heartbeats within the duration
  # heartbeat-interval + acceptable-heartbeat-pause, i.e. 15 seconds with
  # the default settings.
  acceptable-heartbeat-pause = 13s

  # Failure detection checking interval for checking all ClusterClients
  failure-detection-interval = 2s
}


//akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
//akka.persistence.journal.leveldb.dir = "journal"
//# Absolute path to the default snapshot store plugin configuration entry.
//akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"


akka {
  persistence {
    journal {
      plugin = "cassandra-journal"
      auto-start-journals = ["cassandra-journal"]
    }

    snapshot-store {
      plugin = "cassandra-snapshot-store"
      auto-start-snapshot-stores = ["cassandra-snapshot-store"]
    }
    at-least-once-delivery.redeliver-interval = 10000
    at-least-once-delivery.warn-after-number-of-unconfirmed-attempts = 10
    max-concurrent-recoveries = 50
  }
}

